# Based on https://github.com/fly-apps/nginx/blob/b09b9ba0a86174b5bf94f018ae0bf451ae295269/nginx.conf

user nginx;
worker_processes 1;
error_log  /dev/stderr info;
pid        /var/run/nginx.pid;

events {
  worker_connections  4096;
  multi_accept        on;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  log_format main_ext
    '$remote_addr - $remote_user [$time_local] '
    '"$request" $status $body_bytes_sent '
    '"$http_referer" "$http_user_agent" '
    '"$host" sn="$server_name" '
    'rt=$request_time';

  access_log  /dev/stdout main_ext;
  sendfile    on;
  resolver    8.8.8.8;

  server {
    listen 8080 default_server;
    listen [::]:8080;
    server_name _;

    port_in_redirect    off;
    proxy_http_version  1.1;
    proxy_buffering     on;

    index       index.html;
    error_page  404 /404.html;

    if ($http_x_forwarded_proto = "http") {
      return 301 https://$http_host$request_uri;
    }

    location = /count {
      proxy_pass        https://bnjmnt4n.goatcounter.com/count;

      proxy_set_header  Host             $proxy_host;
      proxy_set_header  X-Real-IP        $remote_addr;
      proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;

      proxy_connect_timeout  3000ms;
      proxy_read_timeout     30000ms;
      proxy_send_timeout     30000ms;
    }

    location / {
      root /var/www/ofcr.se;
    }
  }

  # Health check server
  server {
    listen 8080;
    listen [::]:8080;
    server_name health.check;

    location /healthz {
      access_log /dev/stdout;
      return 200 "ok";
    }
  }

  # Redirect
  server {
    listen 8080;
    listen [::]:8080;
    server_name www.ofcr.se oftcour.se www.oftcour.se;

    return 301 https://ofcr.se$request_uri;
  }
}
